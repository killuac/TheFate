<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<!--
        This will automatically locate any and all property files you have
        within your classpath, provided they fall under the config/ directory.
        The located property files are parsed and their values can
        then be used within application context files in the form of
        ${propertyKey}.
    -->
    <context:property-placeholder location="classpath*:*.properties" />
	
	<!-- BoneCP data source -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <property name="driverClass" value="${database.driverClass}" />
        <property name="jdbcUrl" value="${database.jdbcUrl}" />
        <property name="username" value="${database.username}" />
        <property name="password" value="${database.password}" />
        <property name="minConnectionsPerPartition" value="10" />
        <property name="maxConnectionsPerPartition" value="30" />
        <property name="partitionCount" value="3" />
        <property name="acquireIncrement" value="5" />
        <property name="statementsCacheSize" value="100" />
    </bean>
    
    <!-- SQL session factory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  		<property name="dataSource" ref="dataSource" />
  		<property name="configLocation" value="mapperConfig.xml" />
  		<property name="typeAliasesPackage" value="com.woodeck.fate.model" />
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<!-- <constructor-arg index="1" value="BATCH" /> -->
	</bean>
	
	<!-- Transaction management -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
    	<tx:attributes>
	        <tx:method name="select*" read-only="true" propagation="REQUIRED" />
	        <tx:method name="insert*"  propagation="REQUIRED" isolation="DEFAULT" />
	        <tx:method name="update*"  propagation="REQUIRED" isolation="DEFAULT" />
	        <tx:method name="delete*"  propagation="REQUIRED" isolation="DEFAULT" />
		</tx:attributes>
	</tx:advice>
 	<aop:config>
		<aop:pointcut id="pcMapper" expression="execution(public * com.woodeck.fate.mapper.*.*(..))" /> 
		<aop:advisor pointcut-ref="pcMapper" advice-ref="txAdvice" />
	</aop:config>
	
	<!-- Persistence data mapper -->
	<!-- Scan mapper by classpath, can't use it in ElectroServer-->
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.woodeck.fate.mapper" />
		<property name="sqlSessionTemplateBeanName" value="sqlSession" />
	</bean> -->
	
	<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.woodeck.fate.mapper.UserMapper" />
		<property name="sqlSessionTemplate" ref="sqlSession" />
	</bean>
	<bean id="userHeroMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.woodeck.fate.mapper.UserHeroMapper" />
		<property name="sqlSessionTemplate" ref="sqlSession" />
	</bean>
	<bean id="levelExpMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.woodeck.fate.mapper.LevelExpMapper" />
		<property name="sqlSessionTemplate" ref="sqlSession" />
	</bean>
	<bean id="feedbackMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.woodeck.fate.mapper.FeedbackMapper" />
		<property name="sqlSessionTemplate" ref="sqlSession" />
	</bean>
	<bean id="loginHistoryMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.woodeck.fate.mapper.LoginHistoryMapper" />
		<property name="sqlSessionTemplate" ref="sqlSession" />
	</bean>
	<bean id="buyHistoryMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.woodeck.fate.mapper.BuyHistoryMapper" />
		<property name="sqlSessionTemplate" ref="sqlSession" />
	</bean>
	
	<!-- <bean id="userDAO" class="com.woodeck.fate.dao.UserDAOImpl" autowire="byName" /> -->
	<bean id="userDAO" class="com.woodeck.fate.dao.UserDAOImpl" >
		<property name="userMapper" ref="userMapper" />
	</bean>
	<bean id="userHeroDAO" class="com.woodeck.fate.dao.UserHeroDAOImpl" >
		<property name="userHeroMapper" ref="userHeroMapper" />
	</bean>
	<bean id="levelExpDAO" class="com.woodeck.fate.dao.LevelExpDAOImpl" >
		<property name="levelExpMapper" ref="levelExpMapper" />
	</bean>
	<bean id="feedbackDAO" class="com.woodeck.fate.dao.FeedbackDAOImpl" >
		<property name="feedbackMapper" ref="feedbackMapper" />
	</bean>
	<bean id="loginHistoryDAO" class="com.woodeck.fate.dao.LoginHistoryDAOImpl" >
		<property name="loginHistoryMapper" ref="loginHistoryMapper" />
	</bean>
	<bean id="buyHistoryDAO" class="com.woodeck.fate.dao.BuyHistoryDAOImpl" >
		<property name="buyHistoryMapper" ref="buyHistoryMapper" />
	</bean>
</beans>
